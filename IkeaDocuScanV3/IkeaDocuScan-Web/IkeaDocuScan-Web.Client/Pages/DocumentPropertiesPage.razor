@page "/documents/edit/{BarCode:int}"
@page "/documents/register"
@page "/documents/checkin/{FileName}"
@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Components.Routing
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender: false))
@using IkeaDocuScan_Web.Client.Models
@using IkeaDocuScan_Web.Client.Components.DocumentManagement
@using IkeaDocuScan.Shared.Interfaces
@using IkeaDocuScan.Shared.DTOs.Documents
@inject IDocumentService DocumentService
@inject ICounterPartyService CounterPartyService
@inject IDocumentTypeService DocumentTypeService
@inject IScannedFileService ScannedFileService
@inject ICurrencyService CurrencyService
@inject IDocumentNameService DocumentNameService
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime
@inject IAuditTrailService AuditTrailService
@inject ILogger<DocumentPropertiesPage> Logger

<PageTitle>@GetPageTitle()</PageTitle>

<div class="container-fluid">
    <div class="bg-light p-3 document-properties-page">

        @* Loading overlay - shows while parent OR children are loading *@
        @if (isLoading || isLoadingChildren)
        {
            <div class="loading-overlay">
                <div class="text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Loading...</span>
                    </div>
                    <p class="mt-3">@(isLoading ? "Loading document..." : "Loading form data...")</p>
                </div>
            </div>
        }

        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="alert alert-danger" role="alert">
                <h5 class="alert-heading">Error</h5>
                <p class="mb-0">@errorMessage</p>
                @if (Model.Mode == DocumentPropertyMode.CheckIn)
                {
                    <div class="mt-3">
                        <button class="btn btn-primary" @onclick="@(() => NavigationManager.NavigateTo("/checkin-scanned", false))">
                            <i class="fa fa-arrow-left me-2"></i>Back to Scanned Documents
                        </button>
                    </div>
                }
            </div>
        }
        else
        {
            @* Header Section *@
            <div class="row mb-3">
                <div class="col">
                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-12 col-md-6">
                                    <div class="row mb-3">
                                        <label class="col-sm-4 col-form-label">Bar Code:</label>
                                        <div class="col-sm-8">
                                            @if (Model.Mode == DocumentPropertyMode.Register)
                                            {
                                                <input type="text"
                                                       class="form-control"
                                                       id="barcodeInput"
                                                       @bind="Model.BarCode"
                                                       placeholder="Enter barcode number" />
                                            }
                                            else
                                            {
                                                <div class="pt-2"><strong>@Model.BarCode</strong></div>
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="col-12 col-md-6">
                                    <div class="row mb-3">
                                        <label class="col-sm-4 col-form-label">File Name:</label>
                                        <div class="col-sm-8">
                                            @if (Model.HasFile)
                                            {
                                                <button class="btn btn-link p-0" @onclick="ViewDocument">
                                                    @Model.FileName
                                                </button>
                                            }
                                            else
                                            {
                                                <input type="text" readonly class="form-control-plaintext text-muted" value="(none)" />
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            @* Validation Summary *@
            @if (validationErrors.Any())
            {
                <div class="row mb-3">
                    <div class="col">
                        <div class="alert alert-danger" role="alert">
                            <h5 class="alert-heading">Please correct the following errors:</h5>
                            <ul class="mb-0">
                                @foreach (var error in validationErrors)
                                {
                                    <li>@error</li>
                                }
                            </ul>
                        </div>
                    </div>
                </div>
            }

            @* Success Message *@
            @if (!string.IsNullOrEmpty(successMessage))
            {
                <div class="row mb-3">
                    <div class="col">
                        <div class="alert alert-success" role="alert">
                            <h5 class="alert-heading">Success</h5>
                            <p class="mb-0">@successMessage</p>
                        </div>
                    </div>
                </div>
            }


            @* Action Buttons *@
            <div class="row mb-3">
                <div class="col">
                    <div class="btn-group" role="group">
                        <button class="btn btn-primary" @onclick="SaveDocument" disabled="@(isSaving || !hasUnsavedChanges)">
                            @if (isSaving)
                            {
                                <span class="spinner-border spinner-border-sm me-2" role="status" aria-hidden="true"></span>
                            }
                            else
                            {
                                <i class="fa fa-save me-2"></i>
                            }
                            @Model.SaveButtonText
                            @if (!hasUnsavedChanges && !isSaving)
                            {
                                <span class="text-muted ms-2">(No changes)</span>
                            }
                        </button>
                        @if (Model.CanCompareWithStandard)
                        {
                            <button class="btn btn-secondary"
                                    @onclick="CompareWithStandard"
                                    disabled="@(!Model.DocumentTypeId.HasValue)">
                                <i class="fa fa-file me-2"></i>
                                Compare with Standard Contract
                            </button>
                        }
                        <button class="btn btn-light" @onclick="Cancel">
                            <i class="fa fa-times me-2"></i>
                            Cancel
                        </button>
                    </div>
                </div>
            </div>

            @* Main Form - Two Column Layout *@
            @if (!isLoading)
            {
                <div class="row">
                @* Left Column: Document Section *@
                    <div class="col-12 col-md-6">
                        <div class="card mb-3">
                            <div class="card-header">
                                <h5 class="mb-0">Document Information</h5>
                            </div>
                            <div class="card-body">
                                <DocumentSectionFields @bind-Model="@Model"
                                                       @bind-Model:after="CheckForChanges"
                                                       DocumentTypes="@documentTypes"
                                                       CounterParties="@counterParties"
                                                       OnLoadComplete="@OnChildComponentLoadComplete" />
                            </div>
                        </div>
                    </div>

                    @* Right Column: Action, Flags, Additional Info Sections *@
                    <div class="col-12 col-md-6">
                        @* Action Section *@
                        <div class="card mb-3">
                            <div class="card-header">
                                <h5 class="mb-0">Action Information</h5>
                            </div>
                            <div class="card-body">
                                <ActionSectionFields @bind-Model="@Model"
                                                    @bind-Model:after="CheckForChanges"
                                                    OnLoadComplete="@OnChildComponentLoadComplete" />
                            </div>
                        </div>

                        @* Flags Section *@
                        <div class="card mb-3">
                            <div class="card-header">
                                <h5 class="mb-0">Flags</h5>
                            </div>
                            <div class="card-body">
                                <FlagsSectionFields @bind-Model="@Model"
                                                   @bind-Model:after="CheckForChanges"
                                                   OnLoadComplete="@OnChildComponentLoadComplete" />
                            </div>
                        </div>

                        @* Additional Info Section *@
                        <div class="card mb-3">
                            <div class="card-header">
                                <h5 class="mb-0">Additional Information</h5>
                            </div>
                            <div class="card-body">
                                <AdditionalInfoFields @bind-Model="@Model"
                                                     @bind-Model:after="CheckForChanges"
                                                     Currencies="@currencies"
                                                     OnLoadComplete="@OnChildComponentLoadComplete" />
                            </div>
                        </div>
                    </div>
                </div>
            }

            @* Form Data Actions (Copy/Paste) *@
            <div class="row mb-3">
                <div class="col">
                    <div class="card">
                        <div class="card-header">
                            <h5 class="mb-0">Form Data</h5>
                        </div>
                        <div class="card-body">
                            <div class="btn-group" role="group">
                                <button class="btn btn-info" @onclick="CopyFormData">
                                    <i class="fa fa-copy me-2"></i>
                                    Copy
                                </button>
                                <button class="btn btn-info" @onclick="PasteFormData" disabled="@(!hasCopiedData)">
                                    <i class="fa fa-paste me-2"></i>
                                    Paste
                                </button>
                            </div>
                            @if (hasCopiedData)
                            {
                                <div class="ms-3 d-inline-block">
                                    <input type="text" readonly class="form-control-plaintext text-muted d-inline"
                                           value="Copied data available (expires @copiedDataExpiration?.ToString("MMM dd, yyyy"))" />
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>

            @* Audit Information (Edit mode only) *@
            @if (Model.Mode == DocumentPropertyMode.Edit && Model.CreatedOn.HasValue)
            {
                <div class="row">
                    <div class="col">
                        <div class="card">
                            <div class="card-header">
                                <h5 class="mb-0">Audit Information</h5>
                            </div>
                            <div class="card-body">
                                <div class="row">
                                    <div class="col-6">
                                        <small class="text-muted">
                                            Created: @Model.CreatedOn?.ToString("yyyy-MM-dd HH:mm") by @Model.CreatedBy
                                        </small>
                                    </div>
                                    <div class="col-6">
                                        <small class="text-muted">
                                            Modified: @Model.ModifiedOn?.ToString("yyyy-MM-dd HH:mm") by @Model.ModifiedBy
                                        </small>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }
        }
    </div>
</div>

@* Duplicate Detection Modal *@
<div class="modal fade @(showDuplicateModal ? "show d-block" : "")"
     tabindex="-1"
     style="@(showDuplicateModal ? "background-color: rgba(0,0,0,0.5);" : "")">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Duplicate Documents Found</h5>
                <button type="button" class="btn-close" @onclick="CancelDuplicate"></button>
            </div>
            <div class="modal-body">
                <p>
                    Similar documents with the same Document Type, Document No, and Version No already exist:
                </p>
                <ul>
                    @foreach (var barcode in similarDocumentBarcodes)
                    {
                        <li><strong>Barcode: @barcode</strong></li>
                    }
                </ul>
                <p class="mt-3">
                    Do you want to continue anyway?
                </p>
            </div>
            <div class="modal-footer">
                <button class="btn btn-primary" @onclick="ConfirmDuplicate">Continue Anyway</button>
                <button class="btn btn-secondary" @onclick="CancelDuplicate">Cancel</button>
            </div>
        </div>
    </div>
</div>

<style>
    /* Loading overlay */
    .loading-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(255, 255, 255, 0.95);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 9999;
    }

    /* Compact form styling - configurable widths for dropdowns and inputs */
    :root {
        --dropdown-max-width: 20em;
        --input-max-width: 20em;
        --date-max-width: 12em;
        --label-width: 10em;
    }

    /* Limit dropdown widths */
    .compact-dropdown {
        max-width: var(--dropdown-max-width);
    }

    /* Limit text input widths */
    .compact-input {
        max-width: var(--input-max-width);
    }

    /* Limit date picker widths */
    .compact-date {
        max-width: var(--date-max-width);
    }

    /* Horizontal field layout - handled by Bootstrap row/col classes */
    .field-horizontal label.col-form-label {
        text-align: right;
    }

    /* Required indicator */
    .required {
        color: red;
        margin-left: 2px;
    }

    /* Responsive: stack vertically on small screens */
    @@media (max-width: 768px) {
        .field-horizontal label.col-form-label {
            text-align: left;
        }
    }
</style>
