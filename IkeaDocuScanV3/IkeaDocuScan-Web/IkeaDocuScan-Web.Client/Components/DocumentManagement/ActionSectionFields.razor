@using Blazorise
@using IkeaDocuScan_Web.Client.Models
@using IkeaDocuScan_Web.Client.Components.Shared

@* Action Date *@
<Field Horizontal Class="field-horizontal">
    <FieldLabel>Action Date</FieldLabel>
    <FieldBody>
        <DocumentDatePicker @bind-Value="@Model.ActionDate"
                           Disabled="@IsReadOnly"
                           Label="Action Date"
                           Class="compact-date" />
        <Small TextColor="TextColor.Muted">If any action field is filled, all must be filled</Small>
    </FieldBody>
</Field>

@* Action Description *@
<Field>
    <FieldLabel>Action Description</FieldLabel>
    <FieldBody>
        <MemoEdit @bind-Text="@Model.ActionDescription"
                  Rows="3"
                  MaxLength="255"
                  Disabled="@IsReadOnly"
                  Placeholder="Enter action description (max 255 characters)" />
        @if (!string.IsNullOrEmpty(Model.ActionDescription))
        {
            <Small TextColor="TextColor.Muted">@Model.ActionDescription.Length / 255 characters</Small>
        }
    </FieldBody>
</Field>

@* Email Reminder Group (Hidden by default, can be enabled via DocumentType) *@
<Field Horizontal Class="field-horizontal" Display="Display.None">
    <FieldLabel>E-Mail Reminder Group</FieldLabel>
    <FieldBody>
        <Select TValue="string?" @bind-SelectedValue="@Model.EmailReminderGroup" Disabled="@IsReadOnly" Class="compact-dropdown">
            <SelectItem Value="@((string?)null)">-- Select Group --</SelectItem>
            @* TODO: Load from LDAP/Active Directory *@
        </Select>
    </FieldBody>
</Field>

@* Distribution List Label (Read-only display) *@
@if (!string.IsNullOrEmpty(Model.DistributionListLabel))
{
    <ReadOnlyField Label="Distribution List" Value="@Model.DistributionListLabel" />
}

@code {
    /// <summary>
    /// The document properties model
    /// </summary>
    [Parameter, EditorRequired]
    public DocumentPropertiesViewModel Model { get; set; } = new();

    /// <summary>
    /// Event callback when model changes
    /// </summary>
    [Parameter]
    public EventCallback<DocumentPropertiesViewModel> ModelChanged { get; set; }

    /// <summary>
    /// Whether the fields are read-only
    /// </summary>
    [Parameter]
    public bool IsReadOnly { get; set; }
}
