@using Blazorise
@using IkeaDocuScan_Web.Client.Models
@using IkeaDocuScan_Web.Client.Components.Shared
@using IkeaDocuScan.Shared.DTOs.Documents
@using IkeaDocuScan.Shared.Interfaces
@inject ILogger<AdditionalInfoFields> Logger

@* Document Name *@
<Field>
    <FieldLabel>Document Name</FieldLabel>
    <FieldBody>
        <Select TValue="int?" @bind-SelectedValue="@Model.DocumentNameId" Disabled="@IsReadOnly">
            <SelectItem Value="@((int?)null)">-- Select Document Name --</SelectItem>
            @* TODO: Load DocumentNames filtered by DocumentTypeId *@
        </Select>
    </FieldBody>
</Field>

@* Document No. *@
<Field>
    <FieldLabel>Document No. <span class="required">*</span></FieldLabel>
    <FieldBody>
        <TextEdit @bind-Text="@Model.DocumentNo"
                  MaxLength="255"
                  Disabled="@IsReadOnly"
                  Placeholder="Enter document number" />
    </FieldBody>
</Field>

@* Version No. *@
<Field>
    <FieldLabel>Version No. <span class="required">*</span></FieldLabel>
    <FieldBody>
        <TextEdit @bind-Text="@Model.VersionNo"
                  MaxLength="255"
                  Disabled="@IsReadOnly"
                  Placeholder="Enter version number" />
    </FieldBody>
</Field>

@* Associated to PUA/Agreement No. *@
<Field>
    <FieldLabel>Associated to PUA/Agreement No.</FieldLabel>
    <FieldBody>
        <TextEdit @bind-Text="@Model.AssociatedToPUA"
                  MaxLength="255"
                  Disabled="@IsReadOnly"
                  Placeholder="Enter PUA/Agreement number" />
    </FieldBody>
</Field>

@* Associated to Appendix No. *@
<Field>
    <FieldLabel>Associated to Appendix No.</FieldLabel>
    <FieldBody>
        <TextEdit @bind-Text="@Model.AssociatedToAppendix"
                  MaxLength="255"
                  Disabled="@IsReadOnly"
                  Placeholder="Enter appendix number" />
    </FieldBody>
</Field>

@* Valid Until/As Of *@
<Field>
    <FieldLabel>Valid Until/As Of</FieldLabel>
    <FieldBody>
        <DocumentDatePicker @bind-Value="@Model.ValidUntil"
                           Disabled="@IsReadOnly"
                           Label="Valid Until/As Of" />
    </FieldBody>
</Field>

@* Amount *@
<Field>
    <FieldLabel>Amount</FieldLabel>
    <FieldBody>
        <NumericEdit TValue="decimal?"
                     @bind-Value="@Model.Amount"
                     Disabled="@IsReadOnly"
                     Placeholder="0.00"
                     Decimals="2" />
        <Small TextColor="TextColor.Muted">If Amount is entered, Currency must be selected</Small>
    </FieldBody>
</Field>

@* Currency *@
<Field>
    <FieldLabel>
        Currency
        @if (Model.Amount.HasValue)
        {
            <span class="required">*</span>
        }
    </FieldLabel>
    <FieldBody>
        <Select TValue="string?" @bind-SelectedValue="@Model.CurrencyCode" Disabled="@IsReadOnly">
            <SelectItem Value="@((string?)null)">-- Select Currency --</SelectItem>
            @* TODO: Load currencies from database *@
            <SelectItem Value="@("USD")">USD - United States Dollar</SelectItem>
            <SelectItem Value="@("EUR")">EUR - Euro</SelectItem>
            <SelectItem Value="@("GBP")">GBP - British Pound</SelectItem>
        </Select>
    </FieldBody>
</Field>

@* Authorisation to *@
<Field>
    <FieldLabel>Authorisation to</FieldLabel>
    <FieldBody>
        <TextEdit @bind-Text="@Model.Authorisation"
                  MaxLength="255"
                  Disabled="@IsReadOnly"
                  Placeholder="Enter authorisation" />
    </FieldBody>
</Field>

@* Bank Confirmation *@
<Field>
    <FieldLabel>Bank Confirmation <span class="required">*</span></FieldLabel>
    <FieldBody>
        <TriStateDropdown @bind-Value="@Model.BankConfirmation"
                         Disabled="@IsReadOnly"
                         Label="Bank Confirmation" />
    </FieldBody>
</Field>

<style>
    .required {
        color: red;
    }
</style>

@code {
    /// <summary>
    /// The document properties model
    /// </summary>
    [Parameter, EditorRequired]
    public DocumentPropertiesViewModel Model { get; set; } = new();

    /// <summary>
    /// Event callback when model changes
    /// </summary>
    [Parameter]
    public EventCallback<DocumentPropertiesViewModel> ModelChanged { get; set; }

    /// <summary>
    /// Whether the fields are read-only
    /// </summary>
    [Parameter]
    public bool IsReadOnly { get; set; }
}
