<input type="date"
       class="form-control @Class"
       value="@(Value?.ToString("yyyy-MM-dd"))"
       disabled="@Disabled"
       placeholder="@Placeholder"
       @onchange="OnDateChanged" />

@code {
    /// <summary>
    /// The bound nullable DateTime value
    /// </summary>
    [Parameter]
    public DateTime? Value { get; set; }

    /// <summary>
    /// Event callback when date changes
    /// </summary>
    [Parameter]
    public EventCallback<DateTime?> ValueChanged { get; set; }

    /// <summary>
    /// Whether the date picker is disabled
    /// </summary>
    [Parameter]
    public bool Disabled { get; set; }

    /// <summary>
    /// Placeholder text
    /// </summary>
    [Parameter]
    public string Placeholder { get; set; } = "Select date...";

    /// <summary>
    /// Field label for validation messages
    /// </summary>
    [Parameter]
    public string? Label { get; set; }

    /// <summary>
    /// CSS class to apply to the date picker
    /// </summary>
    [Parameter]
    public string? Class { get; set; }

    private async Task OnDateChanged(ChangeEventArgs e)
    {
        if (e.Value is string dateString && !string.IsNullOrWhiteSpace(dateString))
        {
            if (DateTime.TryParse(dateString, out var parsedDate))
            {
                Value = parsedDate;
                await ValueChanged.InvokeAsync(parsedDate);
            }
        }
        else
        {
            Value = null;
            await ValueChanged.InvokeAsync(null);
        }
    }
}
