<select class="form-select"
        value="@GetStringValue()"
        disabled="@Disabled"
        @onchange="OnValueChanged">
    <option value="">-- Select --</option>
    <option value="true">Yes</option>
    <option value="false">No</option>
</select>

@code {
    /// <summary>
    /// The bound nullable boolean value.
    /// null = not selected, true = Yes, false = No
    /// </summary>
    [Parameter]
    public bool? Value { get; set; }

    /// <summary>
    /// Event callback when value changes
    /// </summary>
    [Parameter]
    public EventCallback<bool?> ValueChanged { get; set; }

    /// <summary>
    /// Whether the dropdown is disabled
    /// </summary>
    [Parameter]
    public bool Disabled { get; set; }

    /// <summary>
    /// Field label for validation messages
    /// </summary>
    [Parameter]
    public string? Label { get; set; }

    private string GetStringValue()
    {
        if (!Value.HasValue) return "";
        return Value.Value ? "true" : "false";
    }

    private async Task OnValueChanged(ChangeEventArgs e)
    {
        var stringValue = e.Value?.ToString();

        bool? newValue = stringValue switch
        {
            "true" => true,
            "false" => false,
            _ => null
        };

        Value = newValue;
        await ValueChanged.InvokeAsync(newValue);
    }
}
